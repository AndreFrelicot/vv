#=========================================================
# Find ggo (gengetopt) files (http://www.gnu.org/software/gengetopt/)
FILE(GLOB ALL_GGO_FILES *.ggo)
#MESSAGE(${ALL_GGO_FILES})

FOREACH(GGO_FILE ${ALL_GGO_FILES})
  # MESSAGE(input=${GGO_FILE})  
  STRING(REGEX REPLACE "(.*).ggo" 
    "\\1" GGO_BASENAME
    "${GGO_FILE}")  
  #MESSAGE( base= ${GGO_BASENAME})
  SET(GGO_H ${GGO_BASENAME}_ggo.h)
  #MESSAGE(${GGO_H})
  SET(GGO_C ${GGO_BASENAME}_ggo.c)
  #MESSAGE(${GGO_C}) 
  SET(GGO_OUTPUT  ${GGO_H} ${GGO_C})
  ADD_CUSTOM_COMMAND(OUTPUT ${GGO_OUTPUT} 
 	COMMAND gengetopt 
 	ARGS < ${GGO_FILE} --file-name=${GGO_BASENAME}_ggo -u --conf-parser
 	DEPENDS ${GGO_FILE}
 	)  
 ENDFOREACH(GGO_FILE)

#=========================================================
SET(EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR}/bin/)
SET(LIBRARY_OUTPUT_PATH ${PROJECT_BINARY_DIR}/lib)
LINK_DIRECTORIES(${PROJECT_BINARY_DIR}/lib)
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/ilr/base)
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/ilr/grid)
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/ilr/gridtools)
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/ilr/signal)
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/ilr/pose)
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/ilr/shearwarp)
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/ilr/synergy)
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/ilr/reconstruction)
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/ilr/register)
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/ilr/deformableregistration)
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/ilr/optim)
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/common)
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/tests)
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/tools)
#=========================================================
